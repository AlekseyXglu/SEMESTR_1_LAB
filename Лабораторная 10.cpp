/*1	Дано натуральное число q (0<q<1000). Проверить, может ли оно являться периметром прямоугольного треугольника,
	стороны которого выражены натуральными числами.
  2 Напечатайте таблицу значений функции  на отрезке [А;В]х[C;D] с шагом h1 по х и h2 по у. 
    С помощью символов вывести "рамки" таблицы. Организовать проверку корректности ввода. 
	В случае, если какое-то значение аргумента в таблице не принадлежит области определения функции, вывести напротив него прочерк.
    Предоставить пользователю возможность выбора для табулирования одной из двух заданных функций. 
  3 В последовательности целых чисел найдите максимальное число и количество его повторений.
*/
#include <stdio.h>
#include <locale.h>
#include <math.h>
using namespace std;
void one()
{
	double q;
	int t=0;
	do	{
			printf("Введите число натуральное число q:\n");
			scanf("%lf",&q);
			if (q>=1000 || q<=0) printf("q не принадлежит (0;1000)\n");
		}while(q>=1000 || q<=0);
	for (int i=1; i<=q ; i++)
		for (int j=1; j<=q; j++)
			for (int k=1; k<=q; k++)
				{
					if (i+j>k && j+k>i && i+k>j && q==i+j+k)
						if (i*i==j*j+k*k || j*j==i*i+k*k || k*k==i*i+j*j) t=1;
					if (t==1) break;		
				}
	if (t==1) printf("Является периметром прямоугольного треугольника\n");
		else  printf("Не является периметром прямоугольного треугольника\n");
}

void two()
{
	double a,b,c,d,h1,h2;
	int n;
	do {
			printf("Введите первую границу отрезка для x\n");
			scanf("%lf",&a);	
			printf("Введите вторую границу отрезка для x\n");
			scanf("%lf",&b);	
			printf("Введите первую границу отрезка для y\n");
			scanf("%lf",&c);	
			printf("Введите вторую границу отрезка для y\n");
			scanf("%lf",&d);	
			printf("Введите шаг для x:\n");
			scanf("%lf",&h1);	
			printf("Введите шаг для y:\n");
			scanf("%lf",&h2);	
			if (a>=b || c>=d || h1<=0 || h2<=0) printf("Шаг должен быть положительным и левая граница должна быть меньше правой!\n");
		}while (a>=b || c>=d || h1<=0 || h2<=0);
	do 
		{
			printf("Введите номер функции 1 или 2 для табулирования:\n");
			scanf("%d",&n);
			if (n!=1 && n!=2) printf("Введено другое число!\n");
		}while (n!=1 && n!=2);
	if (n==1)
		{	
			for (double i=a;i<=b;i+=h1)
				{
					for (double j=c;j<=d;j+=h2)
						{
							if (i<=0 || i==1 || cos(i)==0) 
								printf("%10lf  %10lf    -\n",i,j);
							else printf("%10lf  %10lf  %10lf\n",i,j,(1.0-3.0*j/log(i))/cos(i));
						}
				}
		}
	else 
		{
			for (double k=a;k<=b;k+=h1)
				{
					for (double m=c;m<=d;m+=h2)
						{
							if (-k*k+1.0/m<0 || cos(k)==0 || m==0) 
								printf("%10lf  %10lf    -\n",k,m);
							else printf("%10lf  %10lf  %10lf\n",k,m,sqrt(-k*k+1.0/m)/cos(k));
						}
				}
		}
}		
		
void three()
{	
	int n,k=1;
	double x,max;
	printf("Введите количество членов последовательности:\n");
	scanf("%d",&n);
	printf("Введите число 1:\n");
	scanf("%lf",&max);
	for (int i=2; i<=n; i++)
		{
			printf("Введите число %d:\n",i);
			scanf("%lf",&x);
			if (x==max) k++;
			if (x>max) 
				{
					max=x;
					k=1;
				}
		}		
	printf("Максимальное значение: %.4lf , кратность: %d\n",max,k);
}		
		
int main ()
{
	int n;
	setlocale(0,"");	
	printf ("1 :Является ли число периметром прямоугольного треугольника?\n");
  	printf ("2 :Таблица значений функции 2-х переменных с шагом h1 по x и h2 по y.\n");
  	printf ("3 :В последовательности целых чисел найдите максимальное число и количество его повторений.\n");
	printf ("0 :Выход из программы.\n");
			do	{		
					printf("Введите 1,2,3 или 0:\n");
					scanf("%d",&n);
						switch (n)
							{
								case 1: one(); break; 		
								case 2: two(); break;
								case 3: three();break;
							}
					if (n!=0 && n!=1 && n!=2 && n!=3) printf("Введено другое число!\n");
				}while(n!=0);
return 1;		
}	
